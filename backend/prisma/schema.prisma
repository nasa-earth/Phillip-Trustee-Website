generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(EDITOR)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
}

model Post {
  id         String    @id @default(uuid())
  title      String
  content    String
  published  Boolean   @default(false)
  authorId   String
  categoryId String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  slug       String    @unique
  thumbnail  String?
  author     User      @relation(fields: [authorId], references: [id])
  category   Category? @relation(fields: [categoryId], references: [id])
}

model Category {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
}

model Partner {
  id          String   @id @default(uuid())
  name        String
  logo        String?
  website     String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model FAQ {
  id        String   @id @default(uuid())
  question  String
  answer    String
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Page {
  id        String   @id @default(uuid())
  title     String
  slug      String   @unique
  content   String
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Setting {
  id          String   @id @default(uuid())
  updatedAt   DateTime @updatedAt
  address     String?
  description String?
  email       String?
  facebook    String?
  linkedin    String?
  phone       String?
  siteLogo    String?
  siteTitle   String
  twitter     String?
}

model Event {
  id              String   @id @default(uuid())
  title           String
  slug            String   @unique
  description     String
  location        String?
  thumbnail       String?
  isPublished     Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  endDate         DateTime
  registrationUrl String?
  startDate       DateTime
}

enum Role {
  ADMIN
  EDITOR
}
